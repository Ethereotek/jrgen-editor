[{"id":"Foo_Baz","name":"Foo.Baz","summary":"This is the first method","description":"Authenticates the user using the provided credentials and creates a new session.","tags":["Session"],"params":[{"name":"params","type":"object","description":"","constraints":"","schema":"{\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"description\": \"Name of the user to create a session for.\",\n      \"examples\": [\n        \"admin\"\n      ],\n      \"type\": \"string\",\n      \"minLength\": 1\n    },\n    \"password\": {\n      \"description\": \"Password of the user to create a session for.\",\n      \"examples\": [\n        \"123456\"\n      ],\n      \"type\": \"string\",\n      \"minLength\": 1\n    }\n  },\n  \"required\": [\n    \"name\",\n    \"password\"\n  ]\n}"},{"name":"params.name","type":"string","description":"Name of the user to create a session for.","constraints":"minLength=\"1\"","schema":"{\n  \"description\": \"Name of the user to create a session for.\",\n  \"examples\": [\n    \"admin\"\n  ],\n  \"type\": \"string\",\n  \"minLength\": 1\n}"},{"name":"params.password","type":"string","description":"Password of the user to create a session for.","constraints":"minLength=\"1\"","schema":"{\n  \"description\": \"Password of the user to create a session for.\",\n  \"examples\": [\n    \"123456\"\n  ],\n  \"type\": \"string\",\n  \"minLength\": 1\n}"}],"result":[{"name":"result","type":"object","description":"","constraints":"","schema":"{\n  \"type\": \"object\",\n  \"properties\": {\n    \"session_token\": {\n      \"description\": \"Bearer token of the created session.\",\n      \"examples\": [\n        \"123456890\"\n      ],\n      \"type\": \"string\",\n      \"minLength\": 1\n    },\n    \"validity\": {\n      \"description\": \"Validity of the session token in seconds.\",\n      \"examples\": [\n        3600\n      ],\n      \"type\": \"number\",\n      \"multipleOf\": 1\n    }\n  },\n  \"required\": [\n    \"session_token\"\n  ]\n}"},{"name":"result.session_token","type":"string","description":"Bearer token of the created session.","constraints":"minLength=\"1\"","schema":"{\n  \"description\": \"Bearer token of the created session.\",\n  \"examples\": [\n    \"123456890\"\n  ],\n  \"type\": \"string\",\n  \"minLength\": 1\n}"},{"name":"result?.validity","type":"number","description":"Validity of the session token in seconds.","constraints":"multipleOf=\"1\"","schema":"{\n  \"description\": \"Validity of the session token in seconds.\",\n  \"examples\": [\n    3600\n  ],\n  \"type\": \"number\",\n  \"multipleOf\": 1\n}"}],"errors":[{"description":"The provided credentials are invalid.","code":1,"message":"InvalidCredentials"}],"requestExample":"{\n  \"jsonrpc\": \"2.0\",\n  \"id\": \"1234567890\",\n  \"method\": \"Foo.Baz\",\n  \"params\": {\n    \"name\": \"admin\",\n    \"password\": \"123456\"\n  }\n}","responseExample":"{\n  \"jsonrpc\": \"2.0\",\n  \"id\": \"1234567890\",\n  \"result\": {\n    \"session_token\": \"123456890\",\n    \"validity\": 3600\n  }\n}"},{"id":"Foo_bat","name":"Foo.bat","summary":"Destroys an existing session.","tags":["Session"],"params":[],"result":[{"name":"result","type":"number","description":"Always '0'.","constraints":"minimum=\"0\", maximum=\"0\"","schema":"{\n  \"description\": \"Always '0'.\",\n  \"examples\": [\n    0\n  ],\n  \"type\": \"number\",\n  \"minimum\": 0,\n  \"maximum\": 0\n}"}],"errors":[{"description":"Session could not be found.","code":2,"message":"NotFound"}],"requestExample":"{\n  \"jsonrpc\": \"2.0\",\n  \"id\": \"1234567890\",\n  \"method\": \"Foo.bat\"\n}","responseExample":"{\n  \"jsonrpc\": \"2.0\",\n  \"id\": \"1234567890\",\n  \"result\": 0\n}"},{"id":"Session_KeepAlive","name":"Session.KeepAlive","summary":"Refreshs an existing session.","description":"Refreshs an existing session so that it keeps alive and doesn't time out. This method does nothing but refreshing the timeout.","tags":["Session"],"params":[],"result":[{"name":"result","type":"number","description":"Always '0'.","constraints":"minimum=\"0\", maximum=\"0\"","schema":"{\n  \"description\": \"Always '0'.\",\n  \"examples\": [\n    0\n  ],\n  \"type\": \"number\",\n  \"minimum\": 0,\n  \"maximum\": 0\n}"}],"errors":[{"description":"Session could not be found.","code":2,"message":"NotFound"}],"requestExample":"{\n  \"jsonrpc\": \"2.0\",\n  \"id\": \"1234567890\",\n  \"method\": \"Session.KeepAlive\"\n}","responseExample":"{\n  \"jsonrpc\": \"2.0\",\n  \"id\": \"1234567890\",\n  \"result\": 0\n}"},{"id":"User_Add","name":"User.Add","summary":"Adds a new user.","tags":["User"],"params":[{"name":"params","type":"object","description":"","constraints":"","schema":"{\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"description\": \"Name of the user to add.\",\n      \"examples\": [\n        \"user\"\n      ],\n      \"anyOf\": [\n        {\n          \"type\": \"string\",\n          \"minLength\": 1\n        },\n        {\n          \"type\": \"number\",\n          \"multipleOf\": 1\n        }\n      ]\n    },\n    \"email\": {\n      \"description\": \"Email of the user to add.\",\n      \"examples\": [\n        \"user@example.org\"\n      ],\n      \"allOf\": [\n        {\n          \"type\": \"string\",\n          \"format\": \"email\"\n        }\n      ]\n    },\n    \"address\": {\n      \"description\": \"Address of the user to add.\",\n      \"type\": \"array\",\n      \"items\": [\n        {\n          \"description\": \"Address number.\",\n          \"examples\": [\n            1600\n          ],\n          \"type\": \"number\",\n          \"minimum\": 1\n        },\n        {\n          \"description\": \"Name of the street.\",\n          \"examples\": [\n            \"Pennsylvania\"\n          ],\n          \"type\": \"string\",\n          \"minLength\": 1\n        },\n        {\n          \"description\": \"Type of the street.\",\n          \"examples\": [\n            \"Avenue\"\n          ],\n          \"type\": \"string\",\n          \"enum\": [\n            \"Street\",\n            \"Avenue\",\n            \"Boulevard\"\n          ]\n        },\n        {\n          \"description\": \"City quadrant of the address\",\n          \"examples\": [\n            \"NW\"\n          ],\n          \"type\": \"string\",\n          \"enum\": [\n            \"NW\",\n            \"NE\",\n            \"SW\",\n            \"SE\"\n          ]\n        }\n      ]\n    },\n    \"password\": {\n      \"description\": \"Password of the user to add.\",\n      \"examples\": [\n        \"1234567890\"\n      ],\n      \"type\": \"string\",\n      \"minLength\": 1\n    }\n  },\n  \"required\": [\n    \"name\",\n    \"email\",\n    \"password\"\n  ]\n}"},{"name":"params.name","description":"Name of the user to add.","constraints":"","schema":"{\n  \"description\": \"Name of the user to add.\",\n  \"examples\": [\n    \"user\"\n  ],\n  \"anyOf\": [\n    {\n      \"type\": \"string\",\n      \"minLength\": 1\n    },\n    {\n      \"type\": \"number\",\n      \"multipleOf\": 1\n    }\n  ]\n}"},{"name":"params.name(0)","type":"string","description":"","constraints":"minLength=\"1\"","schema":"{\n  \"type\": \"string\",\n  \"minLength\": 1\n}"},{"name":"params.name(1)","type":"number","description":"","constraints":"multipleOf=\"1\"","schema":"{\n  \"type\": \"number\",\n  \"multipleOf\": 1\n}"},{"name":"params.email","description":"Email of the user to add.","constraints":"","schema":"{\n  \"description\": \"Email of the user to add.\",\n  \"examples\": [\n    \"user@example.org\"\n  ],\n  \"allOf\": [\n    {\n      \"type\": \"string\",\n      \"format\": \"email\"\n    }\n  ]\n}"},{"name":"params?.address","type":"array","description":"Address of the user to add.","constraints":"","schema":"{\n  \"description\": \"Address of the user to add.\",\n  \"type\": \"array\",\n  \"items\": [\n    {\n      \"description\": \"Address number.\",\n      \"examples\": [\n        1600\n      ],\n      \"type\": \"number\",\n      \"minimum\": 1\n    },\n    {\n      \"description\": \"Name of the street.\",\n      \"examples\": [\n        \"Pennsylvania\"\n      ],\n      \"type\": \"string\",\n      \"minLength\": 1\n    },\n    {\n      \"description\": \"Type of the street.\",\n      \"examples\": [\n        \"Avenue\"\n      ],\n      \"type\": \"string\",\n      \"enum\": [\n        \"Street\",\n        \"Avenue\",\n        \"Boulevard\"\n      ]\n    },\n    {\n      \"description\": \"City quadrant of the address\",\n      \"examples\": [\n        \"NW\"\n      ],\n      \"type\": \"string\",\n      \"enum\": [\n        \"NW\",\n        \"NE\",\n        \"SW\",\n        \"SE\"\n      ]\n    }\n  ]\n}"},{"name":"params?.address[0]","type":"number","description":"Address number.","constraints":"minimum=\"1\"","schema":"{\n  \"description\": \"Address number.\",\n  \"examples\": [\n    1600\n  ],\n  \"type\": \"number\",\n  \"minimum\": 1\n}"},{"name":"params?.address[1]","type":"string","description":"Name of the street.","constraints":"minLength=\"1\"","schema":"{\n  \"description\": \"Name of the street.\",\n  \"examples\": [\n    \"Pennsylvania\"\n  ],\n  \"type\": \"string\",\n  \"minLength\": 1\n}"},{"name":"params?.address[2]","type":"string","description":"Type of the street.","constraints":"enum=\"Street,Avenue,Boulevard\"","schema":"{\n  \"description\": \"Type of the street.\",\n  \"examples\": [\n    \"Avenue\"\n  ],\n  \"type\": \"string\",\n  \"enum\": [\n    \"Street\",\n    \"Avenue\",\n    \"Boulevard\"\n  ]\n}"},{"name":"params?.address[3]","type":"string","description":"City quadrant of the address","constraints":"enum=\"NW,NE,SW,SE\"","schema":"{\n  \"description\": \"City quadrant of the address\",\n  \"examples\": [\n    \"NW\"\n  ],\n  \"type\": \"string\",\n  \"enum\": [\n    \"NW\",\n    \"NE\",\n    \"SW\",\n    \"SE\"\n  ]\n}"},{"name":"params.password","type":"string","description":"Password of the user to add.","constraints":"minLength=\"1\"","schema":"{\n  \"description\": \"Password of the user to add.\",\n  \"examples\": [\n    \"1234567890\"\n  ],\n  \"type\": \"string\",\n  \"minLength\": 1\n}"}],"result":[{"name":"result","type":"number","description":"Always '0'.","constraints":"minimum=\"0\", maximum=\"0\"","schema":"{\n  \"description\": \"Always '0'.\",\n  \"examples\": [\n    0\n  ],\n  \"type\": \"number\",\n  \"minimum\": 0,\n  \"maximum\": 0\n}"}],"errors":[{"description":"A user with that name already exists.","code":3,"message":"Already exists"}],"requestExample":"{\n  \"jsonrpc\": \"2.0\",\n  \"id\": \"1234567890\",\n  \"method\": \"User.Add\",\n  \"params\": {\n    \"name\": \"user\",\n    \"email\": \"user@example.org\",\n    \"address\": [\n      1600,\n      \"Pennsylvania\",\n      \"Avenue\",\n      \"NW\"\n    ],\n    \"password\": \"1234567890\"\n  }\n}","responseExample":"{\n  \"jsonrpc\": \"2.0\",\n  \"id\": \"1234567890\",\n  \"result\": 0\n}"},{"id":"User_Delete","name":"User.Delete","summary":"Deletes an existing user.","tags":["User"],"params":[{"name":"params","description":"","constraints":"","schema":"{\n  \"oneOf\": [\n    {\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n          \"description\": \"Name of the user to delete.\",\n          \"examples\": [\n            \"user\"\n          ],\n          \"type\": \"string\",\n          \"minLength\": 1,\n          \"pattern\": \"^(A|B)\\\\-.*$\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"exclusive\": true\n    },\n    {\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"description\": \"Id of the user to delete.\",\n          \"examples\": [\n            \"1\"\n          ],\n          \"type\": \"string\",\n          \"minLength\": 1\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"exclusive\": true\n    }\n  ]\n}"},{"name":"params(0)","type":"object","description":"","constraints":"exclusive","schema":"{\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"description\": \"Name of the user to delete.\",\n      \"examples\": [\n        \"user\"\n      ],\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"pattern\": \"^(A|B)\\\\-.*$\"\n    }\n  },\n  \"required\": [\n    \"name\"\n  ],\n  \"exclusive\": true\n}"},{"name":"params(0).name","type":"string","description":"Name of the user to delete.","constraints":"minLength=\"1\", pattern=\"^(A|B)\\-.*$\"","schema":"{\n  \"description\": \"Name of the user to delete.\",\n  \"examples\": [\n    \"user\"\n  ],\n  \"type\": \"string\",\n  \"minLength\": 1,\n  \"pattern\": \"^(A|B)\\\\-.*$\"\n}"},{"name":"params(1)","type":"object","description":"","constraints":"exclusive","schema":"{\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"description\": \"Id of the user to delete.\",\n      \"examples\": [\n        \"1\"\n      ],\n      \"type\": \"string\",\n      \"minLength\": 1\n    }\n  },\n  \"required\": [\n    \"id\"\n  ],\n  \"exclusive\": true\n}"},{"name":"params(1).id","type":"string","description":"Id of the user to delete.","constraints":"minLength=\"1\"","schema":"{\n  \"description\": \"Id of the user to delete.\",\n  \"examples\": [\n    \"1\"\n  ],\n  \"type\": \"string\",\n  \"minLength\": 1\n}"}],"result":[{"name":"result","type":"number","description":"Always '0'.","constraints":"minimum=\"0\", maximum=\"0\"","schema":"{\n  \"description\": \"Always '0'.\",\n  \"examples\": [\n    0\n  ],\n  \"type\": \"number\",\n  \"minimum\": 0,\n  \"maximum\": 0\n}"}],"errors":[{"description":"A user with that name could not be found.","code":2,"message":"Not found"}],"requestExample":"{\n  \"jsonrpc\": \"2.0\",\n  \"id\": \"1234567890\",\n  \"method\": \"User.Delete\",\n  \"params\": {\n    \"name\": \"user\"\n  }\n}","responseExample":"{\n  \"jsonrpc\": \"2.0\",\n  \"id\": \"1234567890\",\n  \"result\": 0\n}"},{"id":"User_GetAll","name":"User.GetAll","summary":"Returns all users.","description":"This method returns an array with information about all existing users.","tags":["User"],"params":[],"result":[{"name":"result","type":"array","description":"List of all existing users.","constraints":"","schema":"{\n  \"description\": \"List of all existing users.\",\n  \"type\": \"array\",\n  \"items\": {\n    \"description\": \"Information about a user.\",\n    \"type\": \"object\",\n    \"properties\": {\n      \"name\": {\n        \"description\": \"Name of the user.\",\n        \"examples\": [\n          \"user\"\n        ],\n        \"type\": \"string\",\n        \"minLength\": 1\n      },\n      \"email\": {\n        \"description\": \"Email of the user.\",\n        \"examples\": [\n          \"user@example.org\"\n        ],\n        \"type\": \"string\",\n        \"format\": \"email\"\n      },\n      \"address\": {\n        \"description\": \"Address of the user to add.\",\n        \"type\": \"array\",\n        \"items\": [\n          {\n            \"name\": \"number\",\n            \"description\": \"Address number.\",\n            \"examples\": [\n              1600\n            ],\n            \"type\": \"number\",\n            \"minimum\": 1\n          },\n          {\n            \"name\": \"street_name\",\n            \"description\": \"Name of the street.\",\n            \"examples\": [\n              \"Pennsylvania\"\n            ],\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          {\n            \"name\": \"street_type\",\n            \"description\": \"Type of the street.\",\n            \"examples\": [\n              \"Avenue\"\n            ],\n            \"type\": \"string\",\n            \"enum\": [\n              \"Street\",\n              \"Avenue\",\n              \"Boulevard\"\n            ]\n          },\n          {\n            \"name\": \"direction\",\n            \"description\": \"City quadrant of the address\",\n            \"examples\": [\n              \"NW\"\n            ],\n            \"type\": \"string\",\n            \"enum\": [\n              \"NW\",\n              \"NE\",\n              \"SW\",\n              \"SE\"\n            ]\n          }\n        ]\n      }\n    },\n    \"required\": [\n      \"name\",\n      \"email\",\n      \"address\"\n    ]\n  }\n}"},{"name":"result[]","type":"object","description":"Information about a user.","constraints":"","schema":"{\n  \"description\": \"Information about a user.\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"description\": \"Name of the user.\",\n      \"examples\": [\n        \"user\"\n      ],\n      \"type\": \"string\",\n      \"minLength\": 1\n    },\n    \"email\": {\n      \"description\": \"Email of the user.\",\n      \"examples\": [\n        \"user@example.org\"\n      ],\n      \"type\": \"string\",\n      \"format\": \"email\"\n    },\n    \"address\": {\n      \"description\": \"Address of the user to add.\",\n      \"type\": \"array\",\n      \"items\": [\n        {\n          \"name\": \"number\",\n          \"description\": \"Address number.\",\n          \"examples\": [\n            1600\n          ],\n          \"type\": \"number\",\n          \"minimum\": 1\n        },\n        {\n          \"name\": \"street_name\",\n          \"description\": \"Name of the street.\",\n          \"examples\": [\n            \"Pennsylvania\"\n          ],\n          \"type\": \"string\",\n          \"minLength\": 1\n        },\n        {\n          \"name\": \"street_type\",\n          \"description\": \"Type of the street.\",\n          \"examples\": [\n            \"Avenue\"\n          ],\n          \"type\": \"string\",\n          \"enum\": [\n            \"Street\",\n            \"Avenue\",\n            \"Boulevard\"\n          ]\n        },\n        {\n          \"name\": \"direction\",\n          \"description\": \"City quadrant of the address\",\n          \"examples\": [\n            \"NW\"\n          ],\n          \"type\": \"string\",\n          \"enum\": [\n            \"NW\",\n            \"NE\",\n            \"SW\",\n            \"SE\"\n          ]\n        }\n      ]\n    }\n  },\n  \"required\": [\n    \"name\",\n    \"email\",\n    \"address\"\n  ]\n}"},{"name":"result[].name","type":"string","description":"Name of the user.","constraints":"minLength=\"1\"","schema":"{\n  \"description\": \"Name of the user.\",\n  \"examples\": [\n    \"user\"\n  ],\n  \"type\": \"string\",\n  \"minLength\": 1\n}"},{"name":"result[].email","type":"string","description":"Email of the user.","constraints":"format=\"email\"","schema":"{\n  \"description\": \"Email of the user.\",\n  \"examples\": [\n    \"user@example.org\"\n  ],\n  \"type\": \"string\",\n  \"format\": \"email\"\n}"},{"name":"result[].address","type":"array","description":"Address of the user to add.","constraints":"","schema":"{\n  \"description\": \"Address of the user to add.\",\n  \"type\": \"array\",\n  \"items\": [\n    {\n      \"name\": \"number\",\n      \"description\": \"Address number.\",\n      \"examples\": [\n        1600\n      ],\n      \"type\": \"number\",\n      \"minimum\": 1\n    },\n    {\n      \"name\": \"street_name\",\n      \"description\": \"Name of the street.\",\n      \"examples\": [\n        \"Pennsylvania\"\n      ],\n      \"type\": \"string\",\n      \"minLength\": 1\n    },\n    {\n      \"name\": \"street_type\",\n      \"description\": \"Type of the street.\",\n      \"examples\": [\n        \"Avenue\"\n      ],\n      \"type\": \"string\",\n      \"enum\": [\n        \"Street\",\n        \"Avenue\",\n        \"Boulevard\"\n      ]\n    },\n    {\n      \"name\": \"direction\",\n      \"description\": \"City quadrant of the address\",\n      \"examples\": [\n        \"NW\"\n      ],\n      \"type\": \"string\",\n      \"enum\": [\n        \"NW\",\n        \"NE\",\n        \"SW\",\n        \"SE\"\n      ]\n    }\n  ]\n}"},{"name":"result[].address[0:number]","type":"number","description":"Address number.","constraints":"minimum=\"1\"","schema":"{\n  \"name\": \"number\",\n  \"description\": \"Address number.\",\n  \"examples\": [\n    1600\n  ],\n  \"type\": \"number\",\n  \"minimum\": 1\n}"},{"name":"result[].address[1:street_name]","type":"string","description":"Name of the street.","constraints":"minLength=\"1\"","schema":"{\n  \"name\": \"street_name\",\n  \"description\": \"Name of the street.\",\n  \"examples\": [\n    \"Pennsylvania\"\n  ],\n  \"type\": \"string\",\n  \"minLength\": 1\n}"},{"name":"result[].address[2:street_type]","type":"string","description":"Type of the street.","constraints":"enum=\"Street,Avenue,Boulevard\"","schema":"{\n  \"name\": \"street_type\",\n  \"description\": \"Type of the street.\",\n  \"examples\": [\n    \"Avenue\"\n  ],\n  \"type\": \"string\",\n  \"enum\": [\n    \"Street\",\n    \"Avenue\",\n    \"Boulevard\"\n  ]\n}"},{"name":"result[].address[3:direction]","type":"string","description":"City quadrant of the address","constraints":"enum=\"NW,NE,SW,SE\"","schema":"{\n  \"name\": \"direction\",\n  \"description\": \"City quadrant of the address\",\n  \"examples\": [\n    \"NW\"\n  ],\n  \"type\": \"string\",\n  \"enum\": [\n    \"NW\",\n    \"NE\",\n    \"SW\",\n    \"SE\"\n  ]\n}"}],"requestExample":"{\n  \"jsonrpc\": \"2.0\",\n  \"id\": \"1234567890\",\n  \"method\": \"User.GetAll\"\n}","responseExample":"{\n  \"jsonrpc\": \"2.0\",\n  \"id\": \"1234567890\",\n  \"result\": [\n    {\n      \"name\": \"user\",\n      \"email\": \"user@example.org\",\n      \"address\": [\n        1600,\n        \"Pennsylvania\",\n        \"Avenue\",\n        \"NW\"\n      ]\n    }\n  ]\n}"}]
